from _typeshed import Incomplete, Literal
from enum import Enum, IntEnum

Axis = Literal['+x','+y','+z','-x','-y','-z']
Axes = Literal['x', 'y', 'z', 'xy', 'xz', 'yz', 'xyz']

class Reg(IntEnum):
    """
    Register addresses

    Enumeration of all available registers and their addresses. Registers are
    named per the datasheet; most 2-byte registers have an alias with a more
    readable name - e.g. DATA_8 is aliased to GYR_X for the gyro x value.
    """
    CHIP_ID = ...
    ERR_REG = ...
    PMU_STATUS = ...
    DATA = ...
    MAG_X = ...
    DATA_0 = ...
    DATA_1 = ...
    MAG_Y = ...
    DATA_2 = ...
    DATA_3 = ...
    MAG_Z = ...
    DATA_4 = ...
    DATA_5 = ...
    HALL = ...
    DATA_6 = ...
    DATA_7 = ...
    GYRO = ...
    GYR_X = ...
    DATA_8 = ...
    DATA_9 = ...
    GYR_Y = ...
    DATA_10 = ...
    DATA_11 = ...
    GYR_Z = ...
    DATA_12 = ...
    DATA_13 = ...
    ACC = ...
    ACC_X = ...
    DATA_14 = ...
    DATA_15 = ...
    ACC_Y = ...
    DATA_16 = ...
    DATA_17 = ...
    ACC_Z = ...
    DATA_18 = ...
    DATA_19 = ...
    SENSORTIME = ...
    SENSORTIME_0 = ...
    SENSORTIME_1 = ...
    SENSORTIME_2 = ...
    STATUS = ...
    INT_STATUS_0 = ...
    INT_STATUS_1 = ...
    INT_STATUS_2 = ...
    INT_STATUS_3 = ...
    TEMP = ...
    TEMPERATURE_0 = ...
    TEMPERATURE_1 = ...
    FIFO_LENGTH = ...
    FIFO_LENGTH_0 = ...
    FIFO_LENGTH_1 = ...
    FIFO = ...
    ACC_CONF = ...
    ACC_RANGE = ...
    GYR_CONF = ...
    GYR_RANGE = ...
    MAG_CONF = ...
    FIFO_DOWNS = ...
    FIFO_CONFIG_0 = ...
    FIFO_CONFIG_1 = ...
    MAG_IF_0 = ...
    MAG_IF_1 = ...
    MAG_IF_2 = ...
    MAG_IF_3 = ...
    MAG_IF_4 = ...
    INT_EN_0 = ...
    INT_EN_1 = ...
    INT_EN_2 = ...
    INT_OUT_CTRL = ...
    INT_LATCH = ...
    INT_MAP_0 = ...
    INT_MAP_1 = ...
    INT_MAP_2 = ...
    INT_DATA_0 = ...
    INT_DATA_1 = ...
    INT_LOWHIGH_0 = ...
    INT_LOWHIGH_1 = ...
    INT_LOWHIGH_2 = ...
    INT_LOWHIGH_3 = ...
    INT_LOWHIGH_4 = ...
    INT_MOTION_0 = ...
    INT_MOTION_1 = ...
    INT_MOTION_2 = ...
    INT_MOTION_3 = ...
    INT_TAP_0 = ...
    INT_TAP_1 = ...
    INT_ORIENT_0 = ...
    INT_ORIENT_1 = ...
    INT_FLAT_0 = ...
    INT_FLAT_1 = ...
    FOC_CONF = ...
    CONF = ...
    IF_CONF = ...
    PMU_TRIGGER = ...
    SELF_TEST = ...
    NV_CONF = ...
    OFFSET_0 = ...
    OFF_ACC_X = ...
    OFFSET_1 = ...
    OFF_ACC_Y = ...
    OFFSET_2 = ...
    OFF_ACC_Z = ...
    OFFSET_3 = ...
    OFF_GYR_X_L = ...
    OFFSET_4 = ...
    OFF_GYR_Y_L = ...
    OFFSET_5 = ...
    OFF_GYR_Z_L = ...
    OFFSET_6 = ...
    STEP_CNT = ...
    STEP_CNT_0 = ...
    STEP_CNT_1 = ...
    STEP_CONF_0 = ...
    STEP_CONF_1 = ...
    CMD = ...

class Bit(Enum):
    """
    Bit fields within registers

    Fields are named as per the datasheet. Single-bit values are stored as the
    bit position; multi-bit values are stored as a 2-tuple with the start and
    end bits (inclusive).
    """
    fatal_err = ...
    err_code = ...
    i2c_fail_err = ...
    drop_cmd_err = ...
    mag_drdy_err = ...
    mag_pmu_status = ...
    gyr_pmu_status = ...
    acc_pmu_status = ...
    gyr_self_test_ok = ...
    mag_man_op = ...
    foc_rdy = ...
    nvm_rdy = ...
    drdy_mag = ...
    drdy_gyr = ...
    drdy_acc = ...
    step_int = ...
    signmot_int = ...
    anym_int = ...
    pmu_trigger_int = ...
    d_tap_int = ...
    s_tap_int = ...
    orient_int = ...
    flat_int = ...
    highg_int = ...
    lowg_int = ...
    drdy_int = ...
    ffull_int = ...
    fwm_int = ...
    nomo_int = ...
    anym_first_x = ...
    anym_first_y = ...
    anym_first_z = ...
    anym_sign = ...
    tap_first_x = ...
    tap_first_y = ...
    tap_first_z = ...
    tap_sign = ...
    high_first_x = ...
    high_first_y = ...
    high_first_z = ...
    high_sign = ...
    orient_1_0 = ...
    orient_2 = ...
    flat = ...
    fifo_byte_counter_10_8 = ...
    acc_odr = ...
    acc_bwp = ...
    acc_us = ...
    acc_range = ...
    gyr_odr = ...
    gyr_bwp = ...
    gyr_range = ...
    mag_odr = ...
    gyr_fifo_downs = ...
    gyr_fifo_filt_data = ...
    acc_fifo_downs = ...
    acc_fifo_filt_data = ...
    fifo_time_en = ...
    fifo_tag_int2_en = ...
    fifo_tag_int1_en = ...
    fifo_header_en = ...
    fifo_mag_en = ...
    fifo_acc_en = ...
    fifo_gyr_en = ...
    i2c_device_addr = ...
    mag_rd_burst = ...
    mag_offset = ...
    mag_manual_en = ...
    foc_acc_z = ...
    foc_acc_y = ...
    foc_acc_x = ...
    foc_gyr_en = ...
    nvm_prog_en = ...
    spi3 = ...
    if_mode = ...
    gyr_sleep_trigger = ...
    gyr_wakeup_trigger = ...
    gyr_sleep_state = ...
    wakeup_int = ...
    acc_self_test_enable = ...
    acc_self_test_sign = ...
    acc_self_test_amp = ...
    gyr_self_test_enable = ...
    spi_en = ...
    i2c_wdt_sel = ...
    i2c_wdt_en = ...
    u_spare_0 = ...
    off_gyr_x_9_8 = ...
    off_gyr_y_9_8 = ...
    off_gyr_z_9_8 = ...
    acc_off_en = ...
    gyr_off_en = ...
    step_conf_10_8 = ...
    step_cnt_en = ...

class Def:
    """
    Definitions used in the registers

    Provides some constant values used by various registers. Values are
    organised with the field name as per the datasheet. Note that not all
    values may be present.

    Some values are non-const as micropython throws errors with identical
    names.
    """
    class error_code(IntEnum):
        NoError = ...
        Error1 = ...
        Error2 = ...
        LPIFilter = ...
        ODRMismatch = ...
        LPFilter = ...
    class pmu_status(IntEnum):
        Suspend = 0
        Normal = 1
        LowPower = 2
        FastStart = 3
    class acc_odr(IntEnum):
        hz25d32 = 1
        hz25d16 = 2
        hz25d8 = 3
        hz25d4 = 4
        hz25d2 = 5
        hz25 = 6
        hz50 = 7
        hz100 = 8
        hz200 = 9
        hz400 = 10
        hz800 = 11
        hz1600 = 12
    class acc_bwp(IntEnum):
        Normal = 2
        OSR2 = 1
        OSR4 = 0
    class acc_range(IntEnum):
        pm2 = ...
        pm4 = ...
        pm8 = ...
        pm16 = ...
    class gyr_odr(IntEnum):
        hz25 = 6
        hz50 = 7
        hz100 = 8
        hz200 = 9
        hz400 = 10
        hz800 = 11
        hz1600 = 12
        hz3200 = 13
    class gyr_bwp(IntEnum):
        Normal = 2
        OSR2 = 1
        OSR4 = 0
    class gyr_range(IntEnum):
        pm2k = ...
        pm1k = ...
        pm500 = ...
        pm250 = ...
        pm125 = ...
    class cmd(IntEnum):
        start_foc = ...
        acc_set_pmu_normal = ...
        acc_set_pmu_low = ...
        gyr_set_pmu_normal = ...
        gyr_set_pmu_fast = ...
        prog_nvm = ...
        fifo_flush = ...
        int_reset = ...
        softreset = ...
        step_cnt_clr = ...

class Map:
    """
    Useful chip-specific mappings of values
    """
    gyro_range_map: Incomplete
    gyro_odr_map: Incomplete
    acc_range_map: Incomplete
